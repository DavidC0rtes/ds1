package sige.finance.consultaclientes;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import javax.swing.*;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

import com.formdev.flatlaf.FlatDarkLaf;
import com.formdev.flatlaf.FlatLaf;
import com.formdev.flatlaf.FlatLightLaf;
import com.formdev.flatlaf.ui.FlatTableUI;
import sige.activos.subestacion.lista.ListaSubestaciones;
import sige.finance.contratos.ConsultaPanelContratos;
import sige.misc.TableCellListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

/**
 *
 * @author user
 */
public class ConsultaPanelCliente extends JPanel {
    private final ConsultaModeloCliente modelo = new ConsultaModeloCliente();
    private final DefaultTableModel mDefaultTableMoadelCliente = new DefaultTableModel();
    private final TableRowSorter<TableModel> rowSorterCliente;

    private final MouseAdapter listener = new MouseAdapter(){
        @Override
        public void mouseClicked(MouseEvent e){
            boolean flag = SwingUtilities.isRightMouseButton(e);
            if(flag){
                flag = false;
                ConsultaPanelContratos consultaPanelContratos = new ConsultaPanelContratos();
                JOptionPane.showMessageDialog(tablaClientes, consultaPanelContratos, "Contrato", JOptionPane.PLAIN_MESSAGE, null);
            }
            else{
            }
        }
    };
    /**
     * Creates new form ConsultaPanelCliente
     */
    public ConsultaPanelCliente() {
        initComponents();
        construirTabla(0);
	rowSorterCliente  = new TableRowSorter<>(tablaClientes.getModel());
	TestTableSortFilter();
	FlatTableUI.createUI(tablaClientes);
    }
    public void lightMode() {
		FlatLightLaf.install();
		FlatLaf.updateUI();
		this.revalidate();
		this.repaint();
    }
    public void darkMode(){
		FlatDarkLaf.install();
		FlatLaf.updateUI();
		this.revalidate();
		this.repaint();
    }
    public void noModificable(){
        JOptionPane.showMessageDialog(this, "Este campo no es modificable","Error al tratar de modificar el campo",1);
    }

    public void TestTableSortFilter() {

        ListaSubestaciones.row(rowSorterCliente, tablaClientes, buscador);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    /**********************************************************************************************************************
    ***********************************************************************************************************************/
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buscador = new JTextField();
        jScrollPane1 = new JScrollPane();
        tablaClientes = new JTable();
        jButton1 = new JButton();
        jButton2 = new JButton();
        jButton3 = new JButton();
        jComboBox1 = new JComboBox<>();
        jLabel1 = new JLabel();

        buscador.setFont(new Font("Tahoma", 0, 14)); // NOI18N
        buscador.setToolTipText("");
        buscador.setMaximumSize(new Dimension(63, 23));
        buscador.setMinimumSize(new Dimension(63, 23));
        buscador.setName("Buscador"); // NOI18N
        buscador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                buscadorActionPerformed(evt);
            }
        });
        buscador.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(KeyEvent evt) {
                buscadorKeyPressed(evt);
            }
        });

        tablaClientes.setBackground(new Color(217, 240, 240));
        tablaClientes.setFont(new Font("Tahoma", 0, 14)); // NOI18N
        tablaClientes.setModel(new DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaClientes);

        jButton1.setFont(new Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setText("Refrescar");
        jButton1.setMaximumSize(new Dimension(87, 25));
        jButton1.setMinimumSize(new Dimension(87, 25));
        jButton1.setPreferredSize(new Dimension(87, 25));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new Font("Tahoma", 0, 14)); // NOI18N
        jButton2.setText("En mora");
        jButton2.setMaximumSize(new Dimension(87, 25));
        jButton2.setMinimumSize(new Dimension(87, 25));
        jButton2.setPreferredSize(new Dimension(87, 25));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new Font("Tahoma", 0, 14)); // NOI18N
        jButton3.setText("Eliminar cliente");
        jButton3.setMaximumSize(new Dimension(87, 25));
        jButton3.setMinimumSize(new Dimension(87, 25));
        jButton3.setPreferredSize(new Dimension(87, 25));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jComboBox1.setFont(new Font("Tahoma", 0, 14)); // NOI18N
        jComboBox1.setModel(new DefaultComboBoxModel<>(new String[] { "Activos", "Desactivos", "Todos" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Buscador");

        GroupLayout layout = new GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 783, GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(buscador, GroupLayout.PREFERRED_SIZE, 468, GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jButton1, GroupLayout.PREFERRED_SIZE, 89, GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jButton2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jComboBox1, 0, 1, Short.MAX_VALUE))))
                .addContainerGap(58, Short.MAX_VALUE))
            .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3, GroupLayout.PREFERRED_SIZE, 147, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(jLabel1)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(buscador, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 521, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    /**********************************************************************************************************************
    ***********************************************************************************************************************/
    private void buscadorKeyPressed(KeyEvent evt) {//GEN-FIRST:event_buscadorKeyPressed

    }//GEN-LAST:event_buscadorKeyPressed

    private void buscadorActionPerformed(ActionEvent evt) {//GEN-FIRST:event_buscadorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buscadorActionPerformed

    private void jButton1ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if(jComboBox1.getSelectedIndex() != 2){
            construirTabla(jComboBox1.getSelectedIndex());
        }else{
            construirTabla(3);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        Object[] opcion = {"No, volver","Si, quiero continuar"};
        int seleccion = (int)JOptionPane.showOptionDialog(this, "El cliente sera borrado de forma permanente"
                + " ¿seguro que quiere continuar?", "Eliminar cliente", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null,
                opcion, opcion[0]);
        if(seleccion == 1){
           String borrar = (String) JOptionPane.showInputDialog(this, "Numero de documento de el cliente a borrar ",
                   "Eliminar cliente", JOptionPane.YES_NO_OPTION);
           if(borrar != null){
               modelo.borrarCliente(borrar);
           }
           else{
           }
        }
        else{
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jComboBox1ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        switch(jComboBox1.getSelectedIndex()){
            case 0:
                construirTabla(0);
                break;
            case 1:
                construirTabla(1);
                break;
            default:
                construirTabla(3);
                break;
               }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton2ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        construirTabla(2);
    }//GEN-LAST:event_jButton2ActionPerformed

    public void construirTabla(int flag) {
	String[] titlesInfo = new String[8];
        titlesInfo[0] = "Tipo de cliente";
	titlesInfo[1] = "Tipo de documento";
        titlesInfo[2] = "Numero de documento";
	titlesInfo[3] = "Nombre";
	titlesInfo[4] = "Apellido";
	titlesInfo[5] = "Segundo apellido";
	titlesInfo[6] = "Correo";
	titlesInfo[7] = "Estado";
	mDefaultTableMoadelCliente.setDataVector(modelo.obtenerMatrizData(flag), titlesInfo);
	tablaClientes.setModel(mDefaultTableMoadelCliente);
	tablaClientes.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 12));
	tablaClientes.getTableHeader().setOpaque(true);
	tablaClientes.setRowHeight(25);
	tablaClientes.setCellSelectionEnabled(true);
        tablaClientes.addMouseListener(listener);
	Action action = new AbstractAction() {
		public void actionPerformed(ActionEvent e)
                {
			TableCellListener tcl = (TableCellListener) e.getSource();
                        if(tcl.getColumn() ==1 || tcl.getColumn() ==2 || tcl.getColumn()==0){
                            noModificable();
                            tablaClientes.setValueAt(tcl.getOldValue(), tcl.getRow(), tcl.getColumn());
                        }
                        else
                        {
                            modelo.updateData(tcl.getColumn(), (String) tcl.getNewValue(),
					(String) tablaClientes.getModel().getValueAt(tcl.getRow(), 2));
			System.out.println("Row   : " + tcl.getRow());
			System.out.println("Column: " + tcl.getColumn());
			System.out.println("Old   : " + tcl.getOldValue());
			System.out.println("New   : " + tcl.getNewValue());
                        }
		}
	};

	TableCellListener tcl = new TableCellListener(tablaClientes, action);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JTextField buscador;
    private JButton jButton1;
    private JButton jButton2;
    private JButton jButton3;
    private JComboBox<String> jComboBox1;
    private JLabel jLabel1;
    private JScrollPane jScrollPane1;
    private JTable tablaClientes;
    // End of variables declaration//GEN-END:variables
}
