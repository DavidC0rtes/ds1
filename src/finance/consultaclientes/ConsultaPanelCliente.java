package finance.consultaclientes;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import javax.swing.*;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

import com.formdev.flatlaf.FlatDarkLaf;
import com.formdev.flatlaf.FlatLaf;
import com.formdev.flatlaf.FlatLightLaf;
import com.formdev.flatlaf.ui.FlatTableUI;
import misc.TableCellListener;
/**
 *
 * @author user
 */
public class ConsultaPanelCliente extends javax.swing.JPanel {
    private final ConsultaModeloCliente modelo = new ConsultaModeloCliente();
    private final DefaultTableModel mDefaultTableMoadelCliente = new DefaultTableModel();
    private final TableRowSorter<TableModel> rowSorterCliente;
    /**
     * Creates new form ConsultaPanelCliente
     */
    public ConsultaPanelCliente() {
		initComponents();
		construirTabla();
		rowSorterCliente  = new TableRowSorter<>(tablaClientes.getModel());
		TestTableSortFilter();
		FlatTableUI.createUI(tablaClientes);
    }
    public void lightMode() {
		FlatLightLaf.install();
		FlatLaf.updateUI();
		this.revalidate();
		this.repaint();
    }
    public void darkMode(){
		FlatDarkLaf.install();
		FlatLaf.updateUI();
		this.revalidate();
		this.repaint();
    }
    public void noModificable()
    {
        JOptionPane.showMessageDialog(this, "Este campo no es modificable");
    }
    
    public void TestTableSortFilter() {

	tablaClientes.setRowSorter(rowSorterCliente);
	buscador.getDocument().addDocumentListener(new DocumentListener(){

		@Override
		public void insertUpdate(DocumentEvent e) {
			String text = buscador.getText();

			if (text.trim().length() == 0) {
				rowSorterCliente.setRowFilter(null);
			} else {
				rowSorterCliente.setRowFilter(RowFilter.regexFilter("(?i)" + text));
			}
		}

		@Override
		public void removeUpdate(DocumentEvent e) {
			String text = buscador.getText();

			if (text.trim().length() == 0) {
				rowSorterCliente.setRowFilter(null);
			} else {
				rowSorterCliente.setRowFilter(RowFilter.regexFilter("(?i)" + text));
			}
		}

		@Override
		public void changedUpdate(DocumentEvent e) {
			throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
		}

	});
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaClientes = new javax.swing.JTable();
        buscador = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        setLayout(new java.awt.BorderLayout());

        jPanel3.setLayout(null);

        jScrollPane1.setBackground(javax.swing.UIManager.getDefaults().getColor("Table.background"));
        jScrollPane1.setBorder(null);
        jScrollPane1.setFocusable(false);
        jScrollPane1.setOpaque(false);

        tablaClientes.setBackground(javax.swing.UIManager.getDefaults().getColor("Panel.background"));
        tablaClientes.setBorder(new javax.swing.border.MatteBorder(null));
        tablaClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaClientes.setFocusable(false);
        tablaClientes.setOpaque(false);
        tablaClientes.setRowHeight(25);
        tablaClientes.setSelectionBackground(javax.swing.UIManager.getDefaults().getColor("Table.selectionBackground"));
        jScrollPane1.setViewportView(tablaClientes);

        jPanel3.add(jScrollPane1);
        jScrollPane1.setBounds(50, 120, 780, 480);

        buscador.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                buscadorKeyPressed(evt);
            }
        });
        jPanel3.add(buscador);
        buscador.setBounds(90, 70, 670, 30);

        jLabel2.setBackground(javax.swing.UIManager.getDefaults().getColor("TextField.background"));
        jLabel2.setFont(new java.awt.Font("Fira Code", 0, 14)); // NOI18N
        jLabel2.setText("Buscador");
        jPanel3.add(jLabel2);
        jLabel2.setBounds(360, 40, 72, 18);

        add(jPanel3, java.awt.BorderLayout.CENTER);

    }// </editor-fold>//GEN-END:initComponents

    private void buscadorKeyPressed(KeyEvent evt) {//GEN-FIRST:event_buscadorKeyPressed
    }//GEN-LAST:event_buscadorKeyPressed
    public void construirTabla() {
	String[] titlesInfo = new String[8];
        titlesInfo[0] = "Tipo de cliente";
	titlesInfo[1] = "Tipo de documento";
        titlesInfo[2] = "Numero de documento";
	titlesInfo[3] = "Nombre";
	titlesInfo[4] = "Apellido";
	titlesInfo[5] = "Segundo apellido";
	titlesInfo[6] = "Correo";
	titlesInfo[7] = "Estado";
	mDefaultTableMoadelCliente.setDataVector(modelo.obtenerMatrizData(), titlesInfo);
	tablaClientes.setModel(mDefaultTableMoadelCliente);
	tablaClientes.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 12));
	tablaClientes.getTableHeader().setOpaque(true);
	tablaClientes.setRowHeight(25);
	tablaClientes.setCellSelectionEnabled(true);
	Action action = new AbstractAction() {
		public void actionPerformed(ActionEvent e) 
                {
			TableCellListener tcl = (TableCellListener) e.getSource();
                        if(tcl.getColumn() ==1 || tcl.getColumn() ==2){
                            noModificable();
                            tablaClientes.setValueAt(tcl.getOldValue(), tcl.getRow(), tcl.getColumn());
                        }
                        else
                        {
                            modelo.updateData(tcl.getColumn(), (String) tcl.getNewValue(),
					(String) tablaClientes.getModel().getValueAt(tcl.getRow(), 2));
			System.out.println("Row   : " + tcl.getRow());
			System.out.println("Column: " + tcl.getColumn());
			System.out.println("Old   : " + tcl.getOldValue());
			System.out.println("New   : " + tcl.getNewValue());
                        } 
		}
	};

	TableCellListener tcl = new TableCellListener(tablaClientes, action);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField buscador;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaClientes;
    // End of variables declaration//GEN-END:variables
}
